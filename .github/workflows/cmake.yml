name: Conan

on:
  push:
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Configure NonBuild Dependencies
      run: python3 -m pip install conan  && sudo apt install cmake ninja-build libgl-dev -y && mkdir -p build
    - name: Configure conan
      working-directory: build
      run: conan profile new default --detect && conan profile update settings.compiler.libcxx=libstdc++11 default
    - name: install conan dependencies
      working-directory: build
      run: conan install .. -gcmake_find_package
    - name: build
      working-directory: build
      run: conan build ..
    - name: Create actual Diagrams
      working-directory: diagrams
      run: chmod +x makeDiagram.sh && ./makeDiagram.sh